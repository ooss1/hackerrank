#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

void bubble_sort(int * matrix,int n){
    int i,j,temp;
    int flag=0;
    for(i=0;i<n;i++){
        for(j=0;j<n-1;j++){
            if(matrix[j] > matrix[j+1]){
                flag = 1;
                temp = matrix[j];
                matrix[j] = matrix[j+1];
                matrix[j+1] = temp;
            }
        }
        if(flag ==0 )break;
    }
}
int main() {
    
    int n;
    int middle,Low_middle,High_middle;
    int i;
    int j;
    int middle_data,Low_middle_data,High_middle_data;
    int *matrix;
    int *matrix_Low,*matrix_High;
    scanf("%d",&n);
    matrix = (int *)malloc(sizeof(int)*n);
    for(i=0;i<n;i++)
    scanf("%d",&matrix[i]);
    
    bubble_sort(matrix,n);
    
    
    if(n%2==0) {middle = n/2; middle_data = (matrix[middle-1]+matrix[middle])/2 ;}
    else {middle = (n/2); middle_data = matrix[middle];}
    
 //   printf("middle = %d\n",middle);
    matrix_Low = (int *)malloc(sizeof(int)*middle);
    matrix_High = (int *)malloc(sizeof(int)*middle);
    for(i=0;i<middle;i++){
        matrix_Low[i]  =matrix[i];
     //   printf("matrix_Low:%d\n",matrix_Low[i]);
    }
    if(n%2!=0) i++;
    
    for(j=0;j<middle;j++){
        matrix_High[j]  =matrix[i];
       //  printf("matrix_High:%d\n",matrix_High[j]);
        i++;
    }
    
    if(middle%2==0) {
        Low_middle = middle/2; High_middle = middle/2; 
        Low_middle_data = (matrix_Low[Low_middle]+matrix_Low[Low_middle-1])/2;
        High_middle_data = (matrix_High[High_middle]+matrix_High[High_middle-1])/2;
    }
    else {
        Low_middle = (middle/2); High_middle = (middle/2);
        Low_middle_data = matrix_Low[Low_middle];
        High_middle_data = matrix_High[High_middle];
    }
    
    printf("%d\n",Low_middle_data);
    printf("%d\n",middle_data);
    printf("%d\n",High_middle_data);
    
    
   
    

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}
